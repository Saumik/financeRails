- content_for :javascript do
  :javascript
    $(document).ready(function() {
      var view = new financeRails.views.budgets.BudgetView();
    });

.well
  %h2 Budget items
  = link_to 'Create Budget Item', new_budget_item_path(), :remote => true, :class => 'btn btn-primary new'
  = link_to 'Create Planned Item', new_planned_item_path(), :remote => true, :class => 'btn btn-primary new'

%ul.year_selector
  - @presenter.budget_year_range.each do |year|
    %li{class: (year == @presenter.active_year) ? 'active' : ''}
      = link_to year, './budgets?year=' + year.to_s

%table.table.table-striped.table-bordered.report_table
  %thead
    %tr
      %th.name Budget Title
      - @presenter.months.each do |(month)|
        %th.date
          = "#{month_name(month)} #{@presenter.active_year}"
      %th.total Total
      %th.actions
  %tbody
    %tr.item-row
      %td
        Income
      - @presenter.income_box.row_column_values(:income).each do |(month, values)|
        %td
          - if @presenter.in_future?(month)
            .future!= currency values[:future_income]
          - else
            != currency_with_sign_class values[:amount]
      %td
        != currency_with_sign_class @presenter.total_income
      %td
    - @presenter.expense_box.rows.each do |budget_item|
      %tr.item-row
        %td
          .categories_popover{data: {content: categories_popover(budget_item), title: 'Categories', html: 'true'}}
            = budget_item.name + ' - '
            %span.limit!= currency budget_item.limit
            %br/
            %span.now
              Now:
              = currency @presenter.amount_available_now(budget_item)
        - @presenter.expense_box.row_column_values(budget_item).each do |(month, values)|
          %td
            - if @presenter.in_future?(month)
              .future!= currency values[:future_expense]
              .future!= currency values[:planned_expense]
            - else
              = link_to url_for(controller: :line_items, action: 'search_overlay', month: month, year: @presenter.active_year, categories: budget_item.categories),  {remote: true}, {class: 'open-search-line-items'} do
                =currency values[:expense]*-1
        %td
          Total:
          = currency budget_item.limit*12
          %br/
          Expenses:
          != currency @presenter.total_expenses_for_budget_item_in_year(budget_item)
          (
          != @presenter.percent_expense(budget_item)
          )
          %br/
          Left:
          != currency_with_sign_class @presenter.amount_left_budget_item_in_year(budget_item)
        %td.actions
          = link_to 'Edit', edit_budget_item_path(budget_item), :remote => true, :class => 'btn btn-primary btn-small edit_btn'
          = link_to 'Clone', budget_item_path(budget_item) + '/clone', :remote => true, :class => 'btn btn-small clone_btn'
          = link_to 'Delete', budget_item_path(budget_item), :remote => true, :method => :delete, :confirm => 'Are you sure delete to delete ' + budget_item.try(:name).to_s + '?', :class => 'btn btn-small btn-danger delete'

Total Budgeted:
= currency @presenter.total_limit

%h2 Planned Items
%ul.planned_items
  - @presenter.planned_items.each do |item|
    %li
      = item.type
      = item.event_date_start
      - if item.event_date_start != item.event_date_end
        = '-'
        = item.event_date_end
      = item.category_name
      = item.amount
      = item.description
      = link_to 'Edit', edit_planned_item_path(item), :remote => true, :class => 'btn btn-primary btn-small edit_btn'

%h2 Highlights
%ul.highlights
  - @presenter.grouped_items.each do |grouped_item|
    %li
      = @presenter.grouped_item_label(grouped_item)
